<%- include('partials/header') %>

<style>
    /* CSS Custom Properties for theming */
    :root {
        --bg-primary: #0a0a0a;
        --bg-secondary: #111111;
        --bg-tertiary: #1a1a1a;
        --text-primary: #ffffff;
        --text-secondary: #a1a1aa;
        --text-tertiary: #71717a;
        --accent-green: #10b981;
        --accent-blue: #3b82f6;
        --accent-amber: #f59e0b;
        --accent-red: #ef4444;
        --glass-bg: rgba(255, 255, 255, 0.05);
        --glass-border: rgba(255, 255, 255, 0.1);
        --shadow-light: rgba(0, 0, 0, 0.1);
        --shadow-medium: rgba(0, 0, 0, 0.3);
        --shadow-heavy: rgba(0, 0, 0, 0.6);
        --gradient-hero: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --gradient-card: linear-gradient(145deg, #1a1a1a 0%, #2d2d2d 100%);
    }

    /* Enhanced body styling */
    body {
        background: var(--bg-primary);
        background-image: 
            radial-gradient(circle at 20% 50%, rgba(120, 119, 198, 0.05) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.05) 0%, transparent 50%),
            radial-gradient(circle at 40% 80%, rgba(120, 200, 255, 0.05) 0%, transparent 50%);
        color: var(--text-primary);
        overflow-x: hidden;
        font-family: 'Inter', 'Vazir', sans-serif;
        line-height: 1.6;
    }

    /* Enhanced scrollbar */
    .custom-scrollbar::-webkit-scrollbar { 
        height: 6px; 
        width: 6px;
    }
    .custom-scrollbar::-webkit-scrollbar-track { 
        background: transparent; 
        border-radius: 3px;
    }
    .custom-scrollbar::-webkit-scrollbar-thumb { 
        background: linear-gradient(90deg, #3b82f6, #8b5cf6);
        border-radius: 3px;
        transition: all 0.3s ease;
    }
    .custom-scrollbar::-webkit-scrollbar-thumb:hover { 
        background: linear-gradient(90deg, #2563eb, #7c3aed);
        transform: scale(1.1);
    }

    /* Glass morphism utility classes */
    .glass {
        background: var(--glass-bg);
        border: 1px solid var(--glass-border);
        backdrop-filter: blur(20px);
        -webkit-backdrop-filter: blur(20px);
    }

    .glass-strong {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(30px);
        -webkit-backdrop-filter: blur(30px);
    }

    /* Hero Section Enhanced */
    #hero-section {
        position: relative;
        background: linear-gradient(135deg, #1e1e2e 0%, #2d1b69 50%, #1a1a2e 100%);
        box-shadow: 
            0 25px 50px -12px var(--shadow-heavy),
            inset 0 1px 0 rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.05);
    }

    .hero-slider-item {
        transition: all 1.2s cubic-bezier(0.4, 0, 0.2, 1);
        visibility: hidden;
        opacity: 0;
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
        transform: scale(1.05);
    }

    .hero-slider-item.active {
        visibility: visible;
        opacity: 1;
        transform: scale(1);
    }

    .hero-gradient-overlay {
        background: linear-gradient(
            135deg,
            rgba(10, 10, 10, 0.9) 0%,
            rgba(10, 10, 10, 0.7) 25%,
            rgba(10, 10, 10, 0.4) 50%,
            rgba(10, 10, 10, 0.2) 75%,
            transparent 100%
        );
    }

    /* Enhanced skeleton animation */
    @keyframes shimmer {
        0% { 
            background-position: -1200px 0;
            opacity: 0.8;
        }
        50% {
            opacity: 1;
        }
        100% { 
            background-position: 1200px 0;
            opacity: 0.8;
        }
    }

    .animate-shimmer {
        animation: shimmer 2s infinite ease-in-out;
        background: linear-gradient(
            90deg,
            var(--bg-tertiary) 25%,
            rgba(255, 255, 255, 0.1) 50%,
            var(--bg-tertiary) 75%
        );
        background-size: 1200px 100%;
    }

    /* Section headers with gradient text */
    .section-title {
        background: linear-gradient(135deg, #3b82f6, #8b5cf6, #06b6d4);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        position: relative;
    }

    .section-title::after {
        content: '';
        position: absolute;
        bottom: -4px;
        left: 0;
        width: 50px;
        height: 2px;
        background: linear-gradient(90deg, #3b82f6, #8b5cf6);
        border-radius: 1px;
    }

    /* Enhanced card styling */
    .manga-card, .channel-card {
        background: var(--gradient-card);
        border: 1px solid rgba(255, 255, 255, 0.05);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
    }

    .manga-card::before, .channel-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 1px;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .manga-card:hover::before, .channel-card:hover::before {
        opacity: 1;
    }

    .manga-card:hover, .channel-card:hover {
        transform: translateY(-8px) scale(1.02);
        box-shadow: 
            0 25px 50px -12px rgba(0, 0, 0, 0.5),
            0 0 30px rgba(59, 130, 246, 0.1);
        border-color: rgba(59, 130, 246, 0.3);
    }

    /* Status badges with glow effect */
    .status-badge {
        position: relative;
        overflow: hidden;
    }

    .status-badge::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s ease;
    }

    .manga-card:hover .status-badge::before {
        left: 100%;
    }

    /* View count badge enhancement */
    .view-count-badge {
        background: rgba(0, 0, 0, 0.7);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        transition: all 0.3s ease;
    }

    .manga-card:hover .view-count-badge {
        background: rgba(59, 130, 246, 0.2);
        border-color: rgba(59, 130, 246, 0.3);
        transform: scale(1.05);
    }

    /* Enhanced navigation buttons */
    .slider-nav-btn {
        background: var(--glass-bg);
        border: 1px solid var(--glass-border);
        backdrop-filter: blur(20px);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .slider-nav-btn:hover {
        background: rgba(59, 130, 246, 0.2);
        border-color: rgba(59, 130, 246, 0.3);
        transform: scale(1.1);
        box-shadow: 0 10px 25px rgba(59, 130, 246, 0.2);
    }

    /* Parallax scroll effect */
    .parallax-bg {
        transform: translateZ(0);
        transition: transform 0.1s ease-out;
    }

    /* Enhanced carousel scrolling */
    .enhanced-carousel {
        scroll-behavior: smooth;
        padding: 1rem;
    }

    .enhanced-carousel:hover {
        --scroll-speed: 0.5s;
    }

    /* Floating action elements */
    .floating-element {
        animation: float 3s ease-in-out infinite;
    }

    @keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-10px); }
    }

    /* Stats section enhancement */
    .stats-container {
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(139, 92, 246, 0.1) 100%);
        border: 1px solid rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
    }

    /* Responsive enhancements */
    @media (max-width: 768px) {
        .hero-slider-item {
            transform: scale(1.02);
        }
        
        .hero-slider-item.active {
            transform: scale(1);
        }
        
        .manga-card:hover, .channel-card:hover {
            transform: translateY(-4px) scale(1.01);
        }
    }

    /* Loading states enhancement */
    .loading-pulse {
        animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    }

    @keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.5; }
    }

    /* Improved text shadows and glows */
    .text-glow {
        text-shadow: 0 0 10px rgba(59, 130, 246, 0.3);
    }

    .hero-title {
        text-shadow: 
            0 1px 3px rgba(0, 0, 0, 0.5),
            0 0 20px rgba(59, 130, 246, 0.2);
    }

    /* Enhanced link hover effects */
    .enhanced-link {
        position: relative;
        transition: all 0.3s ease;
    }

    .enhanced-link::after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 0;
        height: 2px;
        background: linear-gradient(90deg, #3b82f6, #8b5cf6);
        transition: width 0.3s ease;
    }

    .enhanced-link:hover::after {
        width: 100%;
    }
</style>

<div class="container mx-auto space-y-16 py-8">
    <!-- Hero Section with Enhanced Design -->
    <section id="hero-section" class="relative h-[75vh] min-h-[600px] max-h-[700px] w-full overflow-hidden rounded-3xl shadow-2xl">
        <div id="hero-skeleton" class="absolute inset-0 animate-shimmer w-full h-full rounded-3xl"></div>
        <div id="hero-slider-container" class="rounded-3xl overflow-hidden"></div>
        
        <!-- Enhanced Navigation Buttons -->
        <button id="slider-prev" class="slider-nav-btn absolute left-6 top-1/2 -translate-y-1/2 z-30 p-3 rounded-full hidden sm:block">
            <svg class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
        </button>
        <button id="slider-next" class="slider-nav-btn absolute right-6 top-1/2 -translate-y-1/2 z-30 p-3 rounded-full hidden sm:block">
            <svg class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
        </button>

        <!-- Scroll Indicator -->
        <div class="absolute bottom-6 left-1/2 -translate-x-1/2 z-30 floating-element">
            <div class="w-6 h-10 border-2 border-white/30 rounded-full flex justify-center">
                <div class="w-1 h-3 bg-white/70 rounded-full mt-2 animate-bounce"></div>
            </div>
        </div>
    </section>

    <!-- Enhanced Stats Section -->
    <section id="stats-section" class="px-4">
        <div class="stats-container rounded-2xl p-6">
            <%- include('partials/_stats') %>
        </div>
    </section>

    <!-- Latest Updates Section -->
    <section class="space-y-6">
        <div class="px-4 flex justify-between items-center">
            <h2 class="text-3xl font-bold section-title">🚀 آخرین بروزرسانی‌ها</h2>
            <a href="/mangas?sort_by=updated_at_desc" class="enhanced-link text-sm text-sky-400 hover:text-sky-300 transition-colors font-medium">
                مشاهده همه &raquo;
            </a>
        </div>
        <div id="latest-updates-carousel" class="enhanced-carousel flex gap-6 overflow-x-auto custom-scrollbar pt-4 pb-6 px-4">
            <% for (let i = 0; i < 8; i++) { %>
                <div class="flex-shrink-0 w-44 sm:w-48">
                    <div class="manga-card rounded-xl animate-shimmer loading-pulse">
                        <div class="aspect-[2/3] w-full bg-gradient-to-br from-zinc-700 to-zinc-800 rounded-t-xl"></div>
                        <div class="p-4">
                            <div class="h-4 bg-gradient-to-r from-zinc-700 to-zinc-600 rounded-md w-full"></div>
                            <div class="h-3 bg-gradient-to-r from-zinc-700 to-zinc-600 rounded-md w-2/3 mt-3"></div>
                        </div>
                    </div>
                </div>
            <% } %>
        </div>
    </section>

    <!-- Recent Mangas Section -->
    <section class="space-y-6">
        <div class="px-4 flex justify-between items-center">
            <h2 class="text-3xl font-bold section-title">✨ جدیدترین‌ها</h2>
            <a href="/mangas" class="enhanced-link text-sm text-sky-400 hover:text-sky-300 transition-colors font-medium">
                مشاهده همه &raquo;
            </a>
        </div>
        <div id="recent-mangas-carousel" class="enhanced-carousel flex gap-6 overflow-x-auto custom-scrollbar pt-4 pb-6 px-4">
            <% for (let i = 0; i < 8; i++) { %>
                <div class="flex-shrink-0 w-44 sm:w-48">
                    <div class="manga-card rounded-xl animate-shimmer loading-pulse">
                        <div class="aspect-[2/3] w-full bg-gradient-to-br from-zinc-700 to-zinc-800 rounded-t-xl"></div>
                        <div class="p-4">
                            <div class="h-4 bg-gradient-to-r from-zinc-700 to-zinc-600 rounded-md w-full"></div>
                            <div class="h-3 bg-gradient-to-r from-zinc-700 to-zinc-600 rounded-md w-2/3 mt-3"></div>
                        </div>
                    </div>
                </div>
            <% } %>
        </div>
    </section>

    <!-- Popular Mangas Section -->
    <section class="space-y-6">
        <div class="px-4 flex justify-between items-center">
            <h2 class="text-3xl font-bold section-title">🔥 محبوب‌ترین‌ها</h2>
            <a href="/mangas?sort_by=view_count_desc" class="enhanced-link text-sm text-sky-400 hover:text-sky-300 transition-colors font-medium">
                مشاهده همه &raquo;
            </a>
        </div>
        <div id="popular-mangas-carousel" class="enhanced-carousel flex gap-6 overflow-x-auto custom-scrollbar pt-4 pb-6 px-4">
            <% for (let i = 0; i < 8; i++) { %>
                <div class="flex-shrink-0 w-44 sm:w-48">
                    <div class="manga-card rounded-xl animate-shimmer loading-pulse">
                        <div class="aspect-[2/3] w-full bg-gradient-to-br from-zinc-700 to-zinc-800 rounded-t-xl"></div>
                        <div class="p-4">
                            <div class="h-4 bg-gradient-to-r from-zinc-700 to-zinc-600 rounded-md w-full"></div>
                            <div class="h-3 bg-gradient-to-r from-zinc-700 to-zinc-600 rounded-md w-2/3 mt-3"></div>
                        </div>
                    </div>
                </div>
            <% } %>
        </div>
    </section>

    <!-- Top Channels Section -->
    <section class="space-y-6">
        <div class="px-4 flex justify-between items-center">
            <h2 class="text-3xl font-bold section-title">📢 کانال‌های برتر</h2>
            <a href="/channels" class="enhanced-link text-sm text-sky-400 hover:text-sky-300 transition-colors font-medium">
                مشاهده همه &raquo;
            </a>
        </div>
        <div id="suggested-channels-carousel" class="enhanced-carousel flex gap-6 overflow-x-auto custom-scrollbar pt-4 pb-6 px-4">
            <% for (let i = 0; i < 8; i++) { %>
                <div class="flex-shrink-0 w-44 sm:w-48">
                    <div class="channel-card rounded-xl animate-shimmer loading-pulse">
                        <div class="aspect-[4/5] w-full bg-gradient-to-br from-zinc-700 to-zinc-800 rounded-xl"></div>
                    </div>
                </div>
            <% } %>
        </div>
    </section>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Enhanced scroll-based parallax effect
    function initParallaxEffects() {
        const heroSection = document.getElementById('hero-section');
        if (heroSection) {
            window.addEventListener('scroll', () => {
                const scrolled = window.pageYOffset;
                const rate = scrolled * -0.5;
                heroSection.style.transform = `translateY(${rate}px)`;
            });
        }
    }

    // Initialize parallax on load
    initParallaxEffects();

    function getStatusInfo(status) {
        const statusMap = {
            'Ongoing': { 
                text: 'درحال پخش', 
                classes: 'bg-gradient-to-r from-green-500/20 to-emerald-500/20 text-green-300 border border-green-500/50 status-badge'
            },
            'Completed': { 
                text: 'پایان یافته', 
                classes: 'bg-gradient-to-r from-blue-500/20 to-sky-500/20 text-sky-300 border border-sky-500/50 status-badge'
            },
            'Hiatus': { 
                text: 'وقفه', 
                classes: 'bg-gradient-to-r from-yellow-500/20 to-amber-500/20 text-yellow-300 border border-yellow-500/50 status-badge'
            },
            'Dropped': { 
                text: 'رها شده', 
                classes: 'bg-gradient-to-r from-red-500/20 to-rose-500/20 text-red-300 border border-red-500/50 status-badge'
            },
            'Upcoming': { 
                text: 'به زودی', 
                classes: 'bg-gradient-to-r from-indigo-500/20 to-purple-500/20 text-indigo-300 border border-indigo-500/50 status-badge'
            },
            default: { 
                text: 'نامشخص', 
                classes: 'bg-gradient-to-r from-zinc-600/20 to-zinc-700/20 text-zinc-300 border border-zinc-600/50 status-badge'
            }
        };
        return statusMap[status] || statusMap.default;
    }

    function createMangaCard(manga) {
        const statusInfo = getStatusInfo(manga.status);
        const statusTag = statusInfo ? `<span class="absolute top-3 right-3 text-xs font-bold px-3 py-1.5 rounded-full ${statusInfo.classes}">${statusInfo.text}</span>` : '';
        
        return `
            <div class="flex-shrink-0 w-44 sm:w-48 group">
                <a href="/manga/${manga.id}" class="block manga-card rounded-xl shadow-lg overflow-hidden transition-all duration-500 ease-out">
                    <div class="relative aspect-[2/3] w-full overflow-hidden">
                        <img src="${manga.cover_image_url || 'https://placehold.co/300x450/1a1a1a/e4e4e7?text=کاور'}"
                             alt="[کاور ${manga.title}]"
                             class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110" loading="lazy">
                        
                        ${statusTag}

                        <div class="view-count-badge absolute top-3 left-3 flex items-center gap-2 text-white text-xs font-semibold px-3 py-1.5 rounded-full">
                            <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                            </svg>
                            <span>${manga.view_count ? manga.view_count.toLocaleString('fa-IR') : '0'}</span>
                        </div>

                        <div class="absolute bottom-3 right-3">
                            <span class="glass text-white text-xs font-semibold px-3 py-1.5 rounded-lg">
                                ${manga.latest_chapter_number || '?'} چپتر
                            </span>
                        </div>

                        <!-- Hover overlay -->
                        <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    </div>
                    <div class="p-4">
                        <h3 class="font-bold text-zinc-100 truncate group-hover:text-transparent group-hover:bg-gradient-to-r group-hover:from-blue-400 group-hover:to-purple-400 group-hover:bg-clip-text transition-all duration-300 text-glow" title="${manga.title}">
                            ${manga.title}
                        </h3>
                        <p class="text-xs text-zinc-400 mt-2 text-center font-medium">
                            ${manga.source_channel_name || 'نامشخص'}
                        </p>
                    </div>
                </a>
            </div>
        `;
    }

    function createChannelCard(channel) {
        return `
            <div class="flex-shrink-0 w-44 sm:w-48 group">
                <a href="/channel/${channel.id}" class="block text-center channel-card p-6 rounded-xl shadow-lg transition-all duration-500 ease-out">
                    <div class="aspect-square w-28 mx-auto overflow-hidden rounded-full glass p-1 mb-4">
                         <img src="${channel.profile_image_url || 'https://placehold.co/128x128/3f3f46/a1a1aa?text=' + encodeURIComponent(channel.name.substring(0,1))}"
                              alt="[پروفایل ${channel.name}]"
                              class="w-full h-full object-cover rounded-full group-hover:scale-110 transition-transform duration-500">
                    </div>
                    <div>
                        <h3 class="font-bold text-zinc-100 truncate group-hover:text-transparent group-hover:bg-gradient-to-r group-hover:from-blue-400 group-hover:to-purple-400 group-hover:bg-clip-text transition-all duration-300 text-glow" title="${channel.name}">
                            ${channel.name}
                        </h3>
                        <p class="text-xs text-zinc-400 mt-2 font-medium">
                            ${channel.manga_count || 0} اثر
                        </p>
                    </div>
                </a>
            </div>
        `;
    }
    
    function populateCarousel(carouselElement, items, cardCreatorFunction) {
        if (!carouselElement || !items || items.length === 0) {
            if(carouselElement) {
                carouselElement.innerHTML = '<div class="glass rounded-xl p-8 text-center"><p class="text-zinc-400">موردی برای نمایش یافت نشد.</p></div>';
            }
            return;
        }
        carouselElement.innerHTML = items.map(cardCreatorFunction).join('');
    }

    // Enhanced Hero Slider Logic
    const heroSection = document.getElementById('hero-section');
    const sliderContainer = document.getElementById('hero-slider-container');
    const prevBtn = document.getElementById('slider-prev');
    const nextBtn = document.getElementById('slider-next');
    let sliderItems = [], currentIndex = 0, sliderInterval, touchStartX = 0, touchEndX = 0;

    function createHeroSlide(manga, index) {
        const statusInfo = getStatusInfo(manga.status);
        const genresHTML = (manga.genres || []).slice(0, 3).map(g => 
            `<span class="text-xs font-semibold px-4 py-2 glass rounded-full">${g.name}</span>`
        ).join('');

        return `
            <div class="hero-slider-item ${index === 0 ? 'active' : ''}">
                <img src="${manga.banner_image_url || manga.cover_image_url}" 
                     class="absolute inset-0 w-full h-full object-cover object-center transition-transform duration-1000" 
                     alt="بنر ${manga.title}">
                <div class="hero-gradient-overlay absolute inset-0"></div>

                <div class="relative z-20 flex flex-col justify-end h-full max-w-7xl mx-auto p-6 sm:p-8 md:p-12">
                    
                    <div class="w-full md:hidden">
                        <div class="glass-strong rounded-3xl p-6 shadow-2xl">
                            <div class="flex items-center gap-3 mb-3">
                                ${statusInfo ? `<span class="text-xs font-bold px-3 py-1.5 rounded-full ${statusInfo.classes}">${statusInfo.text}</span>` : ''}
                                <div class="flex items-center gap-1 text-white/80 text-xs">
                                    <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                    </svg>
                                    <span>${manga.view_count ? manga.view_count.toLocaleString('fa-IR') : '0'} بازدید</span>
                                </div>
                            </div>
                            
                            <h1 class="hero-title text-2xl font-bold text-white mb-3 leading-tight">${manga.title}</h1>
                            
                            ${manga.description ? `<p class="text-sm text-white/90 mb-4 line-clamp-3">${manga.description}</p>` : ''}
                            
                            <div class="flex flex-wrap gap-2 mb-4">${genresHTML}</div>
                            
                            <div class="flex gap-3">
                                <a href="/manga/${manga.id}" class="flex-1 bg-gradient-to-r from-blue-600 to-purple-600 text-white text-center py-3 px-6 rounded-xl font-semibold transition-all duration-300 hover:from-blue-500 hover:to-purple-500 hover:shadow-lg hover:shadow-blue-500/25">
                                    مشاهده جزئیات
                                </a>
                            </div>
                        </div>
                    </div>

                    <div class="hidden md:block max-w-2xl">
                        <div class="flex items-center gap-4 mb-4">
                            ${statusInfo ? `<span class="text-sm font-bold px-4 py-2 rounded-full ${statusInfo.classes}">${statusInfo.text}</span>` : ''}
                            <div class="flex items-center gap-2 text-white/80 text-sm">
                                <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                </svg>
                                <span>${manga.view_count ? manga.view_count.toLocaleString('fa-IR') : '0'} بازدید</span>
                            </div>
                        </div>
                        
                        <h1 class="hero-title text-4xl lg:text-5xl font-bold text-white mb-6 leading-tight">${manga.title}</h1>
                        
                        ${manga.description ? `<p class="text-lg text-white/90 mb-6 leading-relaxed line-clamp-3">${manga.description}</p>` : ''}
                        
                        <div class="flex flex-wrap gap-3 mb-8">${genresHTML}</div>
                        
                        <div class="flex gap-4">
                            <a href="/manga/${manga.id}" class="bg-gradient-to-r from-blue-600 to-purple-600 text-white py-4 px-8 rounded-xl font-bold text-lg transition-all duration-300 hover:from-blue-500 hover:to-purple-500 hover:shadow-lg hover:shadow-blue-500/25 hover:scale-105">
                                مشاهده جزئیات
                            </a>
                            ${manga.latest_chapter_id ? `
                                <a href="/manga/${manga.id}/chapter/${manga.latest_chapter_id}" class="glass border border-white/20 text-white py-4 px-8 rounded-xl font-bold text-lg transition-all duration-300 hover:bg-white/10 hover:scale-105">
                                    خواندن آخرین چپتر
                                </a>
                            ` : ''}
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    function showSlide(index) {
        sliderItems.forEach((item, i) => {
            item.classList.toggle('active', i === index);
        });
        currentIndex = index;
    }

    function nextSlide() {
        const nextIndex = (currentIndex + 1) % sliderItems.length;
        showSlide(nextIndex);
    }

    function prevSlide() {
        const prevIndex = (currentIndex - 1 + sliderItems.length) % sliderItems.length;
        showSlide(prevIndex);
    }

    function startAutoSlide() {
        sliderInterval = setInterval(nextSlide, 6000);
    }

    function stopAutoSlide() {
        if (sliderInterval) clearInterval(sliderInterval);
    }

    // Touch handling for mobile
    heroSection.addEventListener('touchstart', (e) => {
        touchStartX = e.changedTouches[0].screenX;
    });

    heroSection.addEventListener('touchend', (e) => {
        touchEndX = e.changedTouches[0].screenX;
        const swipeThreshold = 50;
        if (touchStartX - touchEndX > swipeThreshold) nextSlide();
        else if (touchEndX - touchStartX > swipeThreshold) prevSlide();
    });

    // Enhanced mouse interaction
    heroSection.addEventListener('mouseenter', stopAutoSlide);
    heroSection.addEventListener('mouseleave', startAutoSlide);

    // Navigation buttons
    if (prevBtn) prevBtn.addEventListener('click', prevSlide);
    if (nextBtn) nextBtn.addEventListener('click', nextSlide);

    // API calls and data loading
    async function loadHeroSlides() {
        try {
            const response = await fetch('/api/featured-mangas');
            if (!response.ok) throw new Error('Failed to fetch featured mangas');
            
            const mangas = await response.json();
            
            if (mangas && mangas.length > 0) {
                document.getElementById('hero-skeleton').style.display = 'none';
                sliderContainer.innerHTML = mangas.map(createHeroSlide).join('');
                sliderItems = sliderContainer.querySelectorAll('.hero-slider-item');
                startAutoSlide();
            }
        } catch (error) {
            console.error('Error loading hero slides:', error);
            document.getElementById('hero-skeleton').innerHTML = '<div class="glass rounded-3xl p-8 text-center"><p class="text-zinc-400">خطا در بارگذاری اسلایدر</p></div>';
        }
    }

    async function loadLatestUpdates() {
        try {
            const response = await fetch('/api/mangas/latest-updates?limit=12');
            if (!response.ok) throw new Error('Failed to fetch latest updates');
            
            const mangas = await response.json();
            populateCarousel(document.getElementById('latest-updates-carousel'), mangas, createMangaCard);
        } catch (error) {
            console.error('Error loading latest updates:', error);
        }
    }

    async function loadRecentMangas() {
        try {
            const response = await fetch('/api/mangas/recent?limit=12');
            if (!response.ok) throw new Error('Failed to fetch recent mangas');
            
            const mangas = await response.json();
            populateCarousel(document.getElementById('recent-mangas-carousel'), mangas, createMangaCard);
        } catch (error) {
            console.error('Error loading recent mangas:', error);
        }
    }

    async function loadPopularMangas() {
        try {
            const response = await fetch('/api/mangas/popular?limit=12');
            if (!response.ok) throw new Error('Failed to fetch popular mangas');
            
            const mangas = await response.json();
            populateCarousel(document.getElementById('popular-mangas-carousel'), mangas, createMangaCard);
        } catch (error) {
            console.error('Error loading popular mangas:', error);
        }
    }

    async function loadSuggestedChannels() {
        try {
            const response = await fetch('/api/channels/suggested?limit=12');
            if (!response.ok) throw new Error('Failed to fetch suggested channels');
            
            const channels = await response.json();
            populateCarousel(document.getElementById('suggested-channels-carousel'), channels, createChannelCard);
        } catch (error) {
            console.error('Error loading suggested channels:', error);
        }
    }

    // Initialize all sections
    loadHeroSlides();
    loadLatestUpdates();
    loadRecentMangas();
    loadPopularMangas();
    loadSuggestedChannels();

    // Enhanced smooth scrolling for carousels
    document.querySelectorAll('.enhanced-carousel').forEach(carousel => {
        let isScrolling = false;
        
        carousel.addEventListener('wheel', (e) => {
            if (Math.abs(e.deltaX) > Math.abs(e.deltaY)) return;
            
            e.preventDefault();
            
            if (!isScrolling) {
                isScrolling = true;
                carousel.scrollBy({
                    left: e.deltaY > 0 ? 200 : -200,
                    behavior: 'smooth'
                });
                
                setTimeout(() => {
                    isScrolling = false;
                }, 500);
            }
        });
    });
});
</script>

<%- include('partials/footer') %>
